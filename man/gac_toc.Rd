% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gac_toc.R
\name{gac_toc}
\alias{gac_toc}
\alias{gac_toc_chain}
\alias{gac_toc_once}
\title{Calculate TOC Concentration in GAC system}
\source{
See references list at: \url{https://github.com/BrownandCaldwell-Public/tidywater/wiki/References}

Zachman and Summers (2010)

BC WTP Model v. 2.0 Manual (2001)
}
\usage{
gac_toc(
  water,
  ebct = 10,
  model,
  media_size = "12x40",
  bed_vol,
  pretreat = "coag_only"
)

gac_toc_chain(
  df,
  input_water = "defined_water",
  output_water = "gac_water",
  model = "use_col",
  media_size = "use_col",
  ebct = "use_col",
  bed_vol = "use_col",
  pretreat = "use_col"
)

gac_toc_once(
  df,
  input_water = "defined_water",
  model = "use_col",
  media_size = "use_col",
  ebct = "use_col",
  bed_vol = "use_col",
  pretreat = "use_col"
)
}
\arguments{
\item{water}{Source water object of class "water" created by \link{define_water}}

\item{ebct}{Empty bed contact time (minutes). Model results are valid for 10 or 20 minutes.}

\item{model}{Specifies which GAC TOC removal model to apply. Options are Zachman and WTP.}

\item{media_size}{Size of GAC filter mesh. Model includes 12x40 and 8x30 mesh sizes.}

\item{bed_vol}{Bed volume of GAC filter to predict effluent TOC for.}

\item{pretreat}{Specifies the level of pretreatment prior to GAC treatment. Defaults to "coag_only".
Other option is coagulant, ozonation, and biotreatment, called "coag_plus".}

\item{df}{a data frame containing a water class column, which has already been computed using
\link{define_water_chain} The df may include columns named for the chemical(s) being dosed.}

\item{input_water}{name of the column of water class data to be used as the input for this function. Default is "defined_water".}

\item{output_water}{name of the output column storing updated parameters with the class, water. Default is "gac_water".}
}
\value{
\code{gac_toc} returns a water class object with updated DOC, TOC, and UV254 slots.

\code{gac_toc_chain} returns a data frame containing a water class column with updated DOC, TOC, and UV254 slots

\code{gac_toc_once} returns a data frame with columns for TOC, DOC, and UV254 post-GAC treatment.
}
\description{
Calculates TOC concentration after passing through GAC treatment according to the model developed in
"Modeling TOC Breakthrough in Granular Activated Carbon Adsorbers" by Zachman and Summers (2010), or the BC WTP Model v. 2.0 Manual.
For a single water use \code{gac_toc}; for a dataframe use \code{gac_toc_chain}.
Use \link{pluck_water} to get values from the output water as new dataframe columns.
For most arguments in the \verb{_chain} helper
"use_col" default looks for a column of the same name in the dataframe. The argument can be specified directly in the
function instead or an unquoted column name can be provided.

Water must contain DOC or TOC value.
}
\details{
GAC model for TOC removal

The function will calculate TOC concentration by GAC adsorption in drinking water treatment.
UV254 concentrations are predicted based on a linear relationship with DOC.

For large datasets, using \code{fn_once} or \code{fn_chain} may take many minutes to run. These types of functions use the furrr package
for the option to use parallel processing and speed things up. To initialize parallel processing, use
\code{plan(multisession)} or \code{plan(multicore)} (depending on your operating system) prior to your piped code with the
\code{fn_once} or \code{fn_chain} functions. Note, parallel processing is best used when your code block takes more than a minute to run,
shorter run times will not benefit from parallel processing.
}
\examples{
water <- define_water(ph = 8, toc = 2.5, uv254 = .05, doc = 1.5) \%>\%
  gac_toc(media_size = "8x30", ebct = 20, model = "Zachman", bed_vol = 15000)


library(dplyr)

example_df <- water_df \%>\%
  define_water_chain() \%>\%
  mutate(model = "WTP",
         media_size = "8x30",
         ebct = 10, 
         bed_vol = rep(c(12000, 15000, 18000), 4)) \%>\%
  gac_toc_chain()

\donttest{
# Initialize parallel processing
library(furrr)
# plan(multisession)
example_df <- water_df \%>\%
  define_water_chain("raw") \%>\%
  gac_toc_chain(input_water = "raw", model = "WTP")

# Optional: explicitly close multisession processing
# plan(sequential)
}

library(purrr)
library(furrr)
library(tidyr)
library(dplyr)

example_df <- water_df \%>\%
  define_water_chain() \%>\%
  mutate(model = "WTP",
         media_size = "8x30",
         ebct = 10, 
         bed_vol = rep(c(12000, 15000, 18000), 4)) \%>\%
  gac_toc_once()

}
