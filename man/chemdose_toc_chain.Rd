% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/helper_functions.R
\name{chemdose_toc_chain}
\alias{chemdose_toc_chain}
\title{Apply `chemdose_toc` within a dataframe and output a column of `water` class to be chained to other tidywater functions}
\usage{
chemdose_toc_chain(
  df,
  input_water = "defined_water",
  output_water = "coagulated_water",
  alum = 0,
  fecl3 = 0,
  fe2so43 = 0,
  coeff = "Alum"
)
}
\arguments{
\item{df}{a data frame containing a column, defined_water, which has already
been computed using \code{\link{define_water}} or \code{\link{balance_ions}}. The df may include columns named for the chemical(s) being dosed.}

\item{input_water}{name of the column of Water class data to be used as the input for this function. Default is "defined_water".}

\item{output_water}{name of the output column storing updated parameters with the class, Water. Default is "coagulated_water".}

\item{alum}{Hydrated aluminum sulfate Al2(SO4)3*14H2O + 6HCO3 -> 2Al(OH)3(am) +3SO4 + 14H2O + 6CO2}

\item{fecl3}{Ferric Chloride FeCl3 + 3HCO3 -> Fe(OH)3(am) + 3Cl + 3CO2}

\item{fe2so43}{Ferric sulfate Fe2(SO4)3 + 6HCO3 -> 2Fe(OH)3(am) +3SO4 + 6CO2}

\item{coeff}{String specifying the Edwards coefficients to be used from "Alum", "Ferric", "General Alum", "General Ferric", or "Low DOC" or
named vector of coefficients, which must include: k1, k2, x1, x2, x3, b}
}
\description{
This function allows \code{\link{chemdose_toc}} to be added to a piped data frame.
Its output is a `water` class, and can therefore be used with "downstream" tidywater functions.
TOC, DOC, and UV254 will be updated based on input chemical doses.
}
\details{
The data input comes from a `water` class column, as initialized in \code{\link{define_water}} or \code{\link{balance_ions}}.

If the input data frame has a coagulant(s) name matching a valid coagulant(s), the function will dose that coagulant(s). Note:
The function can only dose a coagulant either a column or from the function arguments, not both.

The column names must match the chemical names as displayed in \code{\link{chemdose_toc}}.
To see which chemicals can be passed into the function, see \code{\link{chemdose_toc}}.

 For large datasets, using `fn_once` or `fn_chain` may take many minutes to run. These types of functions use the furrr package
 for the option to use parallel processing and speed things up. To initialize parallel processing, use
 `plan(multisession)` or `plan(multicore)` (depending on your operating system) prior to your piped code with the
 `fn_once` or `fn_chain` functions. Note, parallel processing is best used when your code block takes more than a minute to run,
 shorter run times will not benefit from parallel processing.
}
\examples{

library(purrr)
library(furrr)
library(tidyr)
library(dplyr)

example_df <- water_df \%>\%
  define_water_chain() \%>\%
  balance_ions_chain() \%>\%
  chemdose_ph_chain(alum = 30) \%>\%
  chemdose_toc_chain(input_water = "dosed_chem_water")

example_df <- water_df \%>\%
  define_water_chain() \%>\%
  balance_ions_chain() \%>\%
  mutate(fecl3 = seq(1, 12, 1),
         coeff = "Ferric") \%>\%
  chemdose_toc_chain(input_water = "balanced_water")

example_df <- water_df \%>\%
  define_water_chain() \%>\%
  balance_ions_chain() \%>\%
  chemdose_toc_chain(input_water = "balanced_water", alum = 40, coeff = "General Alum")

# Initialize parallel processing
plan(multisession)
example_df <- water_df \%>\%
  define_water_chain() \%>\%
  balance_ions_chain() \%>\%
  mutate(fecl3 = seq(1, 12, 1)) \%>\%
  chemdose_toc_chain(input_water = "balanced_water", coeff = "Ferric")

# Optional: explicitly close multisession processing
plan(sequential)

}
\seealso{
\code{\link{chemdose_ph}}
}
